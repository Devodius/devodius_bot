name: Devodius Bot
run-name: ${{ github.actor }} is testing Devodius Bot
on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint branch name
        uses: ./.github/actions/branch-lint-action

      - name: Lint commit message
        uses: ./.github/actions/commit-lint-action

      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Lint code
        run: |
          npm i --no-package-lock --no-save eslint eslint-config-prettier prettier @typescript-eslint/eslint-plugin @typescript-eslint/parser
          npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    permissions: 
      checks: write
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install
        run: npm i --no-package-lock --no-save

      - name: Main Test
        if: github.event_name == 'push'
        run: npm run test:ci

      - name: Test and coverage report
        if: github.event_name == 'pull_request'
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: 'npm run test:ci:report'
          skip-step: install

      - name: Upload coverage badge
        if: github.event_name == 'push'
        uses: ./.github/actions/coverage-badge-action

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: install
        run: npm ci

      - name: Build
        run: npm run build

  analyze:
    name: Analyze
    needs: test
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
